#!/usr/bin/env python3
"""
üé¨ –¢–ï–°–¢ –í–ò–†–£–°–ù–û–ì–û –ì–ï–ù–ï–†–ê–¢–û–†–ê –í –°–¢–ò–õ–ï –ü–†–ò–ú–ï–†–û–í
============================================

–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∏—Ä—É—Å–Ω—ã—Ö –≤–∏–¥–µ–æ
—Ç–æ—á–Ω–æ –≤ —Ç–æ–º —Å—Ç–∏–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö.
"""

import asyncio
import sys
from pathlib import Path
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

from src.farm_content.core.viral_video_generator import ViralVideoGenerator
from src.farm_content.services.viral_content_service import ViralContentIntegrator

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s | %(levelname)s | %(message)s')


async def test_viral_video_styles():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –≤–∏—Ä—É—Å–Ω—ã—Ö –≤–∏–¥–µ–æ"""
    
    print("üé¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ò–†–£–°–ù–û–ì–û –ì–ï–ù–ï–†–ê–¢–û–†–ê")
    print("=" * 50)
    print("–°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ –≤ —Å—Ç–∏–ª–µ –≤–∞—à–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤...\n")
    
    generator = ViralVideoGenerator()
    
    # –¢–µ—Å—Ç 1: –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ (–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö)
    print("üöÄ –¢–µ—Å—Ç 1: –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ")
    print("-" * 30)
    
    result1 = await generator.create_viral_video(
        template_name="motivation_viral",
        custom_script="–°–¢–û–ü! –°–∞–º—ã–µ —É—Å–ø–µ—à–Ω—ã–µ –ª—é–¥–∏ –¥–µ–ª–∞—é—Ç –≠–¢–û –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ... –°–µ–∫—Ä–µ—Ç –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–≤ —Ä–∞—Å–∫—Ä—ã—Ç! –°–æ—Ö—Ä–∞–Ω—è–π, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å!",
        target_platform="youtube",
        quality_level="ultra"
    )
    
    if result1["success"]:
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {result1['file_path']}")
        print(f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {result1['metadata']['title']}")
        print(f"üìä –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª: {result1['quality_score']:.1%}")
        print(f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {result1['duration']}—Å")
        print(f"üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result1['metadata']['category']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result1['error']}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –§–∞–∫—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏
    print("üß† –¢–µ—Å—Ç 2: –®–æ–∫–∏—Ä—É—é—â–∏–µ —Ñ–∞–∫—Ç—ã")
    print("-" * 30)
    
    result2 = await generator.create_viral_video(
        template_name="facts_viral", 
        custom_script="99% –ª—é–¥–µ–π –ù–ï –ó–ù–ê–Æ–¢ —ç—Ç–æ–≥–æ —Ñ–∞–∫—Ç–∞! –¢–≤–æ–π –º–æ–∑–≥ —Å–µ–π—á–∞—Å –≤–∑–æ—Ä–≤–µ—Ç—Å—è –æ—Ç —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏... –î–µ–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏!",
        target_platform="tiktok",
        quality_level="high"
    )
    
    if result2["success"]:
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {result2['file_path']}")
        print(f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {result2['metadata']['title']}")
        print(f"üìä –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª: {result2['quality_score']:.1%}")
        print(f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {result2['duration']}—Å")
        print(f"üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result2['metadata']['category']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result2['error']}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –ë–∏–∑–Ω–µ—Å –∏ –¥–µ–Ω—å–≥–∏
    print("üí∞ –¢–µ—Å—Ç 3: –ë–∏–∑–Ω–µ—Å –∫–æ–Ω—Ç–µ–Ω—Ç")
    print("-" * 30)
    
    result3 = await generator.create_viral_video(
        template_name="money_viral",
        custom_script="–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–π –º–∏–ª–ª–∏–æ–Ω –∑–∞ 90 –¥–Ω–µ–π? –≠–¢–û–¢ –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–µ—Å –º–Ω–µ 500–ö –∑–∞ –º–µ—Å—è—Ü! –ü–æ—á–µ–º—É –±–µ–¥–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–¥–Ω—ã–º–∏?",
        target_platform="instagram",
        quality_level="ultra"
    )
    
    if result3["success"]:
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {result3['file_path']}")
        print(f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {result3['metadata']['title']}")
        print(f"üìä –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª: {result3['quality_score']:.1%}")
        print(f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {result3['duration']}—Å")
        print(f"üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result3['metadata']['category']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result3['error']}")
    
    return [result1, result2, result3]


async def test_content_integrator():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    
    print("\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¢–û–†–ê –ö–û–ù–¢–ï–ù–¢–ê")
    print("=" * 50)
    
    integrator = ViralContentIntegrator()
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    test_accounts = [
        {
            "account_id": "motivation_master",
            "account_type": "ai_video", 
            "platform": "youtube"
        },
        {
            "account_id": "facts_hunter",
            "account_type": "trend_short",
            "platform": "tiktok"
        },
        {
            "account_id": "money_guru",
            "account_type": "movie_clip",
            "platform": "instagram" 
        }
    ]
    
    created_videos = []
    
    for account in test_accounts:
        print(f"\nüì± –°–æ–∑–¥–∞–Ω–∏–µ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞: {account['account_id']}")
        print(f"   –¢–∏–ø: {account['account_type']}")
        print(f"   –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {account['platform']}")
        
        content_item = await integrator.create_content_for_account(
            account_type=account["account_type"],
            account_id=account["account_id"]
        )
        
        if content_item:
            created_videos.append(content_item)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ: {content_item.title[:60]}...")
            print(f"   üìä –ö–∞—á–µ—Å—Ç–≤–æ: {content_item.quality_score:.1%}")
            print(f"   üé¨ –§–∞–π–ª: {content_item.file_path}")
            print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {content_item.duration}—Å")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    
    # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if created_videos:
        print(f"\nüìä –ê–ù–ê–õ–ò–¢–ò–ö–ê –°–û–ó–î–ê–ù–ù–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê")
        print("=" * 40)
        
        analytics = integrator.get_performance_analytics(created_videos)
        
        print(f"üìà –í—Å–µ–≥–æ –≤–∏–¥–µ–æ: {analytics['total_videos']}")
        print(f"üèÜ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {analytics['average_quality_score']:.1%}")
        
        print(f"\nüéØ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω–∞–º:")
        for template, count in analytics['template_distribution'].items():
            print(f"   ‚Ä¢ {template}: {count} –≤–∏–¥–µ–æ")
        
        print(f"\n‚≠ê –û—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:")
        grades = analytics['quality_grades']
        print(f"   ‚Ä¢ –û—Ç–ª–∏—á–Ω—ã–µ (80%+): {grades['excellent']}")
        print(f"   ‚Ä¢ –•–æ—Ä–æ—à–∏–µ (60-80%): {grades['good']}")
        print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ (<60%): {grades['average']}")
        
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        for rec in analytics['recommendations']:
            print(f"   ‚Ä¢ {rec}")
    
    return created_videos


async def demonstrate_quality_settings():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞—á–µ—Å—Ç–≤–∞"""
    
    print("\nüé® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–ê–°–¢–†–û–ï–ö –ö–ê–ß–ï–°–¢–í–ê")
    print("=" * 45)
    
    generator = ViralVideoGenerator()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∫–∞—á–µ—Å—Ç–≤–∞
    quality_levels = ["ultra", "high", "medium"]
    
    for quality in quality_levels:
        print(f"\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ: {quality.upper()}")
        
        result = await generator.create_viral_video(
            template_name="lifestyle_viral",
            custom_script=f"–¢–µ—Å—Ç –≤–∏–¥–µ–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ {quality}! –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...",
            quality_level=quality
        )
        
        if result["success"]:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ {quality}")
            print(f"üìÅ –§–∞–π–ª: {result['file_path']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
            quality_settings = generator.get_quality_settings(quality)
            print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
            print(f"   ‚Ä¢ –ë–∏—Ç—Ä–µ–π—Ç –≤–∏–¥–µ–æ: {quality_settings['bitrate']}")
            print(f"   ‚Ä¢ –ë–∏—Ç—Ä–µ–π—Ç –∞—É–¥–∏–æ: {quality_settings['audio_bitrate']}") 
            print(f"   ‚Ä¢ CRF: {quality_settings['crf']}")
            print(f"   ‚Ä¢ –ü—Ä–µ—Å–µ—Ç: {quality_settings['preset']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ {quality}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üé¨ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ò–†–£–°–ù–û–ì–û –ì–ï–ù–ï–†–ê–¢–û–†–ê")
    print("=" * 55)
    print("–°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ —Ç–æ—á–Ω–æ –≤ —Å—Ç–∏–ª–µ –≤–∞—à–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤!\n")
    
    try:
        # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –≤–∏–¥–µ–æ
        video_results = await test_viral_video_styles()
        
        # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        content_results = await test_content_integrator()
        
        # –¢–µ—Å—Ç 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞  
        await demonstrate_quality_settings()
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 30)
        
        successful_videos = sum(1 for r in video_results if r["success"])
        successful_content = len(content_results)
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: {successful_videos}/3")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {successful_content}/3")
        
        if successful_videos > 0 or successful_content > 0:
            print(f"\nüéØ –í–°–ï –í–ò–î–ï–û –°–û–ó–î–ê–Æ–¢–°–Ø –í –°–¢–ò–õ–ï –í–ê–®–ò–• –ü–†–ò–ú–ï–†–û–í:")
            print(f"   ‚Ä¢ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —á–µ—Ç–∫–æ—Å—Ç—å")
            print(f"   ‚Ä¢ –Ø—Ä–∫–∏–µ, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞")
            print(f"   ‚Ä¢ –î–∏–Ω–∞–º–∏—á–Ω—ã–π –º–æ–Ω—Ç–∞–∂")
            print(f"   ‚Ä¢ –í–∏—Ä—É—Å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è")
            print(f"   ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–∞–∂–¥—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É")
            print(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏")
            
            print(f"\nüìÅ –í—Å–µ –≤–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: generated_viral_content/")
            print(f"üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –º–∞—Å—Å–æ–≤–æ–º—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É!")
        
        else:
            print(f"\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ")
            print(f"   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        print(f"   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
        print(f"   pip install -r requirements_updated.txt")


if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    Path("generated_viral_content").mkdir(exist_ok=True)
    Path("viral_assets/audio/trending").mkdir(parents=True, exist_ok=True)
    Path("viral_assets/effects").mkdir(parents=True, exist_ok=True)
    Path("logs").mkdir(exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    asyncio.run(main())