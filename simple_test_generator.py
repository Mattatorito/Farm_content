#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üé¨ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¢–û–†–ê –í–ò–î–ï–û
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ —Å—Ç–∏–ª–µ –≤–∞—à–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = Path(__file__).parent
src_path = current_dir / "src"
sys.path.insert(0, str(src_path))
sys.path.insert(0, str(current_dir))

# –ë–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
import logging
from datetime import datetime
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s | %(levelname)s | %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)

logger = logging.getLogger(__name__)

async def create_simple_viral_video():
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –≤–∏—Ä—É—Å–Ω–æ–µ –≤–∏–¥–µ–æ –≤ —Å—Ç–∏–ª–µ –≤–∞—à–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
    """
    try:
        logger.info("üé¨ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞–ø—Ä—è–º—É—é
        from src.farm_content.core.viral_video_generator import ViralVideoGenerator
        
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator = ViralVideoGenerator()
        
        logger.info("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ
        test_config = {
            "template_name": "motivation_viral",
            "custom_script": "–°–¢–û–ü! –°–µ–∫—Ä–µ—Ç –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–≤ –Ω–∞–∫–æ–Ω–µ—Ü —Ä–∞—Å–∫—Ä—ã—Ç! 99% –ª—é–¥–µ–π –Ω–µ –∑–Ω–∞—é—Ç —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ –±–æ–≥–∞—Ç—Å—Ç–≤–∞...",
            "target_platform": "youtube",
            "quality_level": "high"  # –ù–∞—á–Ω–µ–º —Å high –≤–º–µ—Å—Ç–æ ultra
        }
        
        logger.info(f"üéØ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: {test_config['template_name']}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∏–¥–µ–æ
        result = await generator.create_viral_video(**test_config)
        
        if result and result.get('success'):
            logger.info("üéâ –í–ò–î–ï–û –°–û–ó–î–ê–ù–û –£–°–ü–ï–®–ù–û!")
            logger.info(f"üìÅ –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {result.get('output_path')}")
            logger.info(f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {result.get('duration')} —Å–µ–∫")
            logger.info(f"üìè –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {result.get('resolution')}")
            logger.info(f"üî• –ö–∞—á–µ—Å—Ç–≤–æ: {result.get('quality')}")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ
            if result.get('metadata'):
                metadata = result['metadata']
                logger.info(f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {metadata.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                logger.info(f"üìñ –û–ø–∏—Å–∞–Ω–∏–µ: {metadata.get('description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')[:100]}...")
                logger.info(f"üè∑Ô∏è –•–µ—à—Ç–µ–≥–∏: {', '.join(metadata.get('hashtags', []))}")
            
            return result
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ")
            return None
            
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

async def test_multiple_templates():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    """
    logger.info("üß™ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...")
    
    templates_to_test = [
        {
            "name": "motivation_viral",
            "script": "–°–¢–û–ü! 7 —É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—Ç –≤–∞—à—É –∂–∏–∑–Ω—å –∑–∞ 30 –¥–Ω–µ–π!",
            "platform": "youtube"
        },
        {
            "name": "facts_viral", 
            "script": "99% –ª—é–¥–µ–π –ù–ï –ó–ù–ê–Æ–¢ —ç—Ç–æ—Ç —Ñ–∞–∫—Ç –æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –º–æ–∑–≥–µ! –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å —É–¥–∏–≤–∏—Ç—å—Å—è...",
            "platform": "tiktok"
        },
        {
            "name": "money_viral",
            "script": "–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–π –º–∏–ª–ª–∏–æ–Ω –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤? –°–µ–∫—Ä–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –±–æ–≥–∞—á–µ–π!",
            "platform": "instagram"
        }
    ]
    
    results = []
    
    for i, template in enumerate(templates_to_test, 1):
        logger.info(f"üé¨ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ {i}/{len(templates_to_test)}: {template['name']}")
        
        try:
            from src.farm_content.core.viral_video_generator import ViralVideoGenerator
            generator = ViralVideoGenerator()
            
            config = {
                "template_name": template["name"],
                "custom_script": template["script"],
                "target_platform": template["platform"], 
                "quality_level": "high"
            }
            
            result = await generator.create_viral_video(**config)
            
            if result and result.get('success'):
                logger.info(f"‚úÖ –í–∏–¥–µ–æ {i} —Å–æ–∑–¥–∞–Ω–æ: {result.get('output_path')}")
                results.append(result)
            else:
                logger.warning(f"‚ö†Ô∏è –í–∏–¥–µ–æ {i} –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –≤–∏–¥–µ–æ {i}: {str(e)}")
            
    return results

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("üé¨" + "="*60)
    print("   –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¢–û–†–ê –í–ò–î–ï–û –í –°–¢–ò–õ–ï –í–ê–®–ò–• –ü–†–ò–ú–ï–†–û–í")
    print("="*64)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    logger.info("üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞...")
    
    required_dirs = [
        "src/farm_content/core",
        "viral_assets",
        "ready_videos"
    ]
    
    for dir_path in required_dirs:
        full_path = Path(dir_path)
        if full_path.exists():
            logger.info(f"‚úÖ {dir_path}")
        else:
            logger.warning(f"‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {dir_path}")
            full_path.mkdir(parents=True, exist_ok=True)
    
    # –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø —Ç–µ—Å—Ç–∞
    test_type = input("\nüéØ –ö–∞–∫–æ–π —Ç–µ—Å—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å?\n1. –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ\n2. –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç (3 –≤–∏–¥–µ–æ)\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): ").strip()
    
    if test_type == "2":
        logger.info("üß™ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç...")
        results = asyncio.run(test_multiple_templates())
        
        print(f"\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù! –°–æ–∑–¥–∞–Ω–æ {len(results)} –≤–∏–¥–µ–æ")
        
        for i, result in enumerate(results, 1):
            if result:
                print(f"üìπ –í–∏–¥–µ–æ {i}: {result.get('output_path')}")
                
    else:
        logger.info("üé¨ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç...")
        result = asyncio.run(create_simple_viral_video())
        
        if result:
            print(f"\nüéâ –£–°–ü–ï–•! –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {result.get('output_path')}")
            print("üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ!")
        else:
            print("\n‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∏–¥–µ–æ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")

if __name__ == "__main__":
    main()