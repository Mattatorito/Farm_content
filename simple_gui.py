#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üñ•Ô∏è –ü–†–û–°–¢–û–ï GUI –ü–†–ò–õ–û–ñ–ï–ù–ò–ï - Tkinter –≤–µ—Ä—Å–∏—è
==========================================

–ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è GUI –Ω–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º Tkinter
–¥–ª—è —Å–∏—Å—Ç–µ–º –≥–¥–µ PyQt6 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
"""

import os
import sys
import threading
import time
from pathlib import Path

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π tkinter
try:
    import tkinter as tk
    from tkinter import messagebox, scrolledtext, ttk

    TKINTER_AVAILABLE = True
except ImportError:
    TKINTER_AVAILABLE = False


class ViralContentGUITkinter:
    """GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Tkinter"""

    def __init__(self):
        self.root = tk.Tk()
        self.current_mode = "url"
        self.processing = False
        self.setup_ui()

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.root.title("üî• –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025")
        self.root.geometry("1000x700")
        self.root.configure(bg="#2c3e50")

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_frame = tk.Frame(self.root, bg="#2c3e50")
        main_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = tk.Label(
            main_frame,
            text="üî• –í–ò–†–£–°–ù–ê–Ø –ö–û–ù–¢–ï–ù–¢-–ú–ê–®–ò–ù–ê 2025",
            font=("Arial", 20, "bold"),
            fg="white",
            bg="#2c3e50",
        )
        title_label.pack(pady=10)

        # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å - 3 –∫–æ–ª–æ–Ω–∫–∏
        content_frame = tk.Frame(main_frame, bg="#2c3e50")
        content_frame.pack(fill=tk.BOTH, expand=True)

        # –†–µ–∂–∏–º—ã (–ª–µ–≤–∞—è –ø–∞–Ω–µ–ª—å)
        self.create_modes_panel(content_frame)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å)
        self.create_settings_panel(content_frame)

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å)
        self.create_stats_panel(content_frame)

    def create_modes_panel(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å —Ä–µ–∂–∏–º–æ–≤"""
        modes_frame = tk.LabelFrame(
            parent,
            text="üéØ –†–ï–ñ–ò–ú–´ –†–ê–ë–û–¢–´",
            font=("Arial", 12, "bold"),
            fg="white",
            bg="#34495e",
            labelanchor="n",
        )
        modes_frame.pack(side=tk.LEFT, fill=tk.Y, padx=(0, 5))

        modes = [
            ("url", "üì∫ –ù–ê–†–ï–ó–ö–ê –ü–û URL", "–í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É ‚Üí –ø–æ–ª—É—á–∏ –∫–ª–∏–ø—ã"),
            ("trends", "üî• –ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–û–í", "–ù–∞–π–¥–∏ —Ç–æ–ø ‚Üí –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π ‚Üí –æ–ø—É–±–ª–∏–∫—É–π"),
            ("ai", "ü§ñ AI –ì–ï–ù–ï–†–ê–¶–ò–Ø", "–ê–Ω–∞–ª–∏–∑ ‚Üí AI —Å–æ–∑–¥–∞–Ω–∏–µ ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è"),
        ]

        self.mode_buttons = {}

        for mode_id, title, description in modes:
            # –ö–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞
            btn = tk.Button(
                modes_frame,
                text=title,
                font=("Arial", 11, "bold"),
                bg="#27ae60",
                fg="white",
                activebackground="#2ecc71",
                activeforeground="white",
                relief="raised",
                bd=2,
                command=lambda m=mode_id: self.switch_mode(m),
            )
            btn.pack(fill=tk.X, padx=10, pady=5)
            self.mode_buttons[mode_id] = btn

            # –û–ø–∏—Å–∞–Ω–∏–µ
            desc_label = tk.Label(
                modes_frame,
                text=description,
                font=("Arial", 9),
                fg="#bdc3c7",
                bg="#34495e",
                wraplength=180,
                justify="center",
            )
            desc_label.pack(padx=10, pady=(0, 15))

    def create_settings_panel(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        settings_frame = tk.LabelFrame(
            parent,
            text="‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï",
            font=("Arial", 12, "bold"),
            fg="white",
            bg="#34495e",
            labelanchor="n",
        )
        settings_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=5)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∂–∏–º–∞
        self.mode_title = tk.Label(
            settings_frame,
            text="üì∫ –†–ï–ñ–ò–ú –ù–ê–†–ï–ó–ö–ò –ü–û URL",
            font=("Arial", 14, "bold"),
            fg="#f39c12",
            bg="#34495e",
        )
        self.mode_title.pack(pady=10)

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
        params_frame = tk.LabelFrame(
            settings_frame,
            text="–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏",
            font=("Arial", 10, "bold"),
            fg="white",
            bg="#2c3e50",
        )
        params_frame.pack(fill=tk.X, padx=10, pady=5)

        # URL –≤–≤–æ–¥
        url_frame = tk.Frame(params_frame, bg="#2c3e50")
        url_frame.pack(fill=tk.X, padx=10, pady=5)

        tk.Label(url_frame, text="YouTube URL:", fg="white", bg="#2c3e50").pack(
            anchor="w"
        )
        self.url_entry = tk.Entry(url_frame, font=("Arial", 10), width=50)
        self.url_entry.pack(fill=tk.X, pady=(2, 0))
        self.url_entry.insert(0, "https://youtube.com/watch?v=dQw4w9WgXcQ")

        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–ø–æ–≤
        clips_frame = tk.Frame(params_frame, bg="#2c3e50")
        clips_frame.pack(fill=tk.X, padx=10, pady=5)

        tk.Label(clips_frame, text="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–ø–æ–≤:", fg="white", bg="#2c3e50").pack(
            anchor="w"
        )
        self.clips_var = tk.StringVar(value="3")
        clips_spin = tk.Spinbox(
            clips_frame, from_=1, to=10, textvariable=self.clips_var, width=10
        )
        clips_spin.pack(anchor="w", pady=(2, 0))

        # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        duration_frame = tk.Frame(params_frame, bg="#2c3e50")
        duration_frame.pack(fill=tk.X, padx=10, pady=5)

        tk.Label(
            duration_frame, text="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–µ–∫):", fg="white", bg="#2c3e50"
        ).pack(anchor="w")
        self.duration_var = tk.StringVar(value="60")
        duration_spin = tk.Spinbox(
            duration_frame, from_=15, to=180, textvariable=self.duration_var, width=10
        )
        duration_spin.pack(anchor="w", pady=(2, 0))

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        self.start_button = tk.Button(
            settings_frame,
            text="üöÄ –ù–ê–ß–ê–¢–¨ –û–ë–†–ê–ë–û–¢–ö–£",
            font=("Arial", 14, "bold"),
            bg="#e74c3c",
            fg="white",
            activebackground="#c0392b",
            activeforeground="white",
            relief="raised",
            bd=3,
            command=self.start_processing,
        )
        self.start_button.pack(pady=20, fill=tk.X, padx=20)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å
        progress_frame = tk.LabelFrame(
            settings_frame,
            text="üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏",
            font=("Arial", 10, "bold"),
            fg="white",
            bg="#2c3e50",
        )
        progress_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=5)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.progress = ttk.Progressbar(progress_frame, mode="determinate", length=400)
        self.progress.pack(pady=10, padx=10)

        # –°—Ç–∞—Ç—É—Å
        self.status_label = tk.Label(
            progress_frame,
            text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
            font=("Arial", 10),
            fg="#2ecc71",
            bg="#2c3e50",
        )
        self.status_label.pack(pady=5)

        # –õ–æ–≥
        self.log_text = scrolledtext.ScrolledText(
            progress_frame,
            height=8,
            font=("Courier", 9),
            bg="#1a252f",
            fg="#ecf0f1",
            insertbackground="white",
        )
        self.log_text.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.add_log("üéâ –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025 –∑–∞–ø—É—â–µ–Ω–∞!")
        self.add_log("üí° –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É'")

    def create_stats_panel(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        stats_frame = tk.LabelFrame(
            parent,
            text="üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê",
            font=("Arial", 12, "bold"),
            fg="white",
            bg="#34495e",
            labelanchor="n",
        )
        stats_frame.pack(side=tk.RIGHT, fill=tk.Y, padx=(5, 0))

        # –°—á–µ—Ç—á–∏–∫–∏
        self.stats_labels = {}

        stats = [
            ("videos_created", "–°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: 0"),
            ("videos_uploaded", "–ó–∞–≥—Ä—É–∂–µ–Ω–æ: 0"),
            ("success_rate", "–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 0%"),
        ]

        for stat_id, text in stats:
            label = tk.Label(
                stats_frame, text=text, font=("Arial", 11), fg="white", bg="#34495e"
            )
            label.pack(anchor="w", padx=10, pady=5)
            self.stats_labels[stat_id] = label

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        tk.Frame(stats_frame, height=2, bg="#7f8c8d").pack(fill=tk.X, padx=10, pady=10)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–º–æ
        demo_label = tk.Label(
            stats_frame,
            text="üéØ –î–ï–ú–û –†–ï–ñ–ò–ú",
            font=("Arial", 11, "bold"),
            fg="#f39c12",
            bg="#34495e",
        )
        demo_label.pack(pady=(10, 5))

        demo_text = tk.Text(
            stats_frame,
            height=15,
            width=30,
            font=("Arial", 9),
            fg="#bdc3c7",
            bg="#2c3e50",
            wrap=tk.WORD,
            relief="flat",
        )
        demo_text.pack(padx=10, pady=5)

        demo_info = """‚ú® –≠—Ç–æ –¥–µ–º–æ –≤–µ—Ä—Å–∏—è!

üîß –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
‚Ä¢ –†–µ–∞–ª—å–Ω–∞—è –Ω–∞—Ä–µ–∑–∫–∞ –≤–∏–¥–µ–æ
‚Ä¢ AI –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
‚Ä¢ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ YouTube
‚Ä¢ –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞

üìã –î–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏:
–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏
–≤ config/api_keys.json

üöÄ –¢—Ä–∏ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã:
1. –ù–∞—Ä–µ–∑–∫–∞ –ø–æ URL
2. –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
3. AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è

üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å–µ —Ä–µ–∂–∏–º—ã!"""

        demo_text.insert("1.0", demo_info)
        demo_text.config(state="disabled")

    def switch_mode(self, mode):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤"""
        self.current_mode = mode

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        for mode_id, btn in self.mode_buttons.items():
            if mode_id == mode:
                btn.config(bg="#e74c3c")
            else:
                btn.config(bg="#27ae60")

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        mode_titles = {
            "url": "üì∫ –†–ï–ñ–ò–ú –ù–ê–†–ï–ó–ö–ò –ü–û URL",
            "trends": "üî• –†–ï–ñ–ò–ú –ê–ù–ê–õ–ò–ó–ê –¢–†–ï–ù–î–û–í",
            "ai": "ü§ñ –†–ï–ñ–ò–ú AI –ì–ï–ù–ï–†–ê–¶–ò–ò",
        }
        self.mode_title.config(text=mode_titles[mode])

        self.add_log(f"üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞: {mode_titles[mode]}")

    def start_processing(self):
        """–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        if self.processing:
            return

        self.processing = True
        self.start_button.config(state="disabled", text="‚è≥ –û–ë–†–ê–ë–û–¢–ö–ê...")
        self.progress["value"] = 0

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        thread = threading.Thread(target=self.simulate_processing)
        thread.daemon = True
        thread.start()

    def simulate_processing(self):
        """–°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        steps = [
            (10, "üîç –ê–Ω–∞–ª–∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."),
            (25, "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞..."),
            (40, "‚úÇÔ∏è –ù–∞—Ä–µ–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞..."),
            (60, "üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π..."),
            (80, "üì§ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ..."),
            (95, "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ YouTube..."),
            (100, "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"),
        ]

        for progress, message in steps:
            self.root.after(0, self.update_progress, progress, message)
            time.sleep(1.5)

        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        self.root.after(0, self.processing_finished)

    def update_progress(self, progress, message):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        self.progress["value"] = progress
        self.status_label.config(text=message)
        self.add_log(f"[{progress}%] {message}")

    def processing_finished(self):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        self.processing = False
        self.start_button.config(state="normal", text="üöÄ –ù–ê–ß–ê–¢–¨ –û–ë–†–ê–ë–û–¢–ö–£")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.stats_labels["videos_created"].config(text="–°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: 3")
        self.stats_labels["videos_uploaded"].config(text="–ó–∞–≥—Ä—É–∂–µ–Ω–æ: 3")
        self.stats_labels["success_rate"].config(text="–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 100%")

        self.add_log("üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        self.add_log(f"üìä –†–µ–∂–∏–º: {self.current_mode}")
        self.add_log(f"üì∫ URL: {self.url_entry.get()[:50]}...")
        self.add_log(f"üìÅ –ö–ª–∏–ø–æ–≤: {self.clips_var.get()}")

        messagebox.showinfo(
            "–£—Å–ø–µ—Ö!",
            f"‚úÖ {self.current_mode.upper()} —Ä–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n\n"
            f"üìä –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–ø–æ–≤: {self.clips_var.get()}\n"
            f"üì§ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ YouTube: {self.clips_var.get()}\n"
            f"üíØ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 100%",
        )

    def add_log(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥"""
        timestamp = time.strftime("%H:%M:%S")
        log_entry = f"[{timestamp}] {message}\n"

        self.log_text.config(state="normal")
        self.log_text.insert(tk.END, log_entry)
        self.log_text.see(tk.END)
        self.log_text.config(state="disabled")

    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.mainloop()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    print("\n" + "=" * 60)
    print("üñ•Ô∏è –ó–ê–ü–£–°–ö TKINTER GUI - –í–ò–†–£–°–ù–ê–Ø –ö–û–ù–¢–ï–ù–¢-–ú–ê–®–ò–ù–ê 2025")
    print("=" * 60)

    if not TKINTER_AVAILABLE:
        print("‚ùå Tkinter –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!")
        return False

    try:
        print("‚úÖ Tkinter GUI –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print("üéØ –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º Tkinter")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å–µ —Ç—Ä–∏ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã!")

        app = ViralContentGUITkinter()
        app.run()

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False


if __name__ == "__main__":
    success = main()
    if success:
        print("\nüëã Tkinter GUI –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Tkinter GUI")
