#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üåê –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–° - –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025
===============================================

–ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ Flask –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —Ä–µ–∂–∏–º–∞–º–∏.
–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ª—é–±–æ–π —Å–∏—Å—Ç–µ–º–µ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä.
"""

import json
import os
import sys
import threading
import time
from datetime import datetime
from pathlib import Path

# Flask –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫
try:
    from flask import Flask, jsonify, redirect, render_template_string, request, url_for

    FLASK_AVAILABLE = True
except ImportError:
    FLASK_AVAILABLE = False


class ViralContentWeb:
    """–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""

    def __init__(self):
        self.app = Flask(__name__)
        self.processing_status = {
            "active": False,
            "progress": 0,
            "message": "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
        }
        self.stats = {"videos_created": 0, "videos_uploaded": 0, "success_rate": 0}
        self.logs = []
        self.setup_routes()

    def setup_routes(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–æ–≤"""

        @self.app.route("/")
        def index():
            """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
            return render_template_string(self.get_html_template())

        @self.app.route("/api/process", methods=["POST"])
        def process():
            """API –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
            if self.processing_status["active"]:
                return jsonify({"error": "–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–∂–µ –∏–¥–µ—Ç"})

            data = request.get_json()
            mode = data.get("mode", "url")
            params = data.get("params", {})

            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            thread = threading.Thread(
                target=self.simulate_processing, args=(mode, params)
            )
            thread.daemon = True
            thread.start()

            return jsonify({"success": True, "message": "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞"})

        @self.app.route("/api/status")
        def status():
            """–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
            return jsonify(
                {
                    "processing": self.processing_status,
                    "stats": self.stats,
                    "logs": self.logs[-20:],  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π
                }
            )

    def simulate_processing(self, mode, params):
        """–°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        self.processing_status["active"] = True

        steps = [
            (10, "üîç –ê–Ω–∞–ª–∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."),
            (25, "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞..."),
            (40, "‚úÇÔ∏è –ù–∞—Ä–µ–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞..."),
            (60, "üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π..."),
            (80, "üì§ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ..."),
            (95, "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ YouTube..."),
            (100, "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"),
        ]

        for progress, message in steps:
            self.processing_status["progress"] = progress
            self.processing_status["message"] = message
            self.add_log(f"[{progress}%] {message}")
            time.sleep(2)

        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        self.processing_status["active"] = False
        self.stats["videos_created"] += 3
        self.stats["videos_uploaded"] += 3
        self.stats["success_rate"] = 100

        self.add_log(f"üéâ –†–µ–∂–∏–º '{mode}' –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        self.add_log(f"üìä –°–æ–∑–¥–∞–Ω–æ: {3} –≤–∏–¥–µ–æ, –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {3}")

    def add_log(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∞"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        self.logs.append({"time": timestamp, "message": message})

    def get_html_template(self):
        """HTML —à–∞–±–ª–æ–Ω"""
        return """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üî• –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
        }
        .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
        .header { text-align: center; margin-bottom: 30px; }
        .header h1 { font-size: 2.5rem; margin-bottom: 10px; text-shadow: 2px 2px 4px rgba(0,0,0,0.5); }
        .header p { font-size: 1.1rem; opacity: 0.9; }

        .modes-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .mode-card {
            background: rgba(255,255,255,0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid rgba(255,255,255,0.2);
            transition: transform 0.3s ease;
        }
        .mode-card:hover { transform: translateY(-5px); }
        .mode-card.active { border-color: #ffd700; box-shadow: 0 0 20px rgba(255,215,0,0.3); }
        .mode-title { font-size: 1.3rem; margin-bottom: 15px; display: flex; align-items: center; }
        .mode-icon { font-size: 2rem; margin-right: 10px; }
        .mode-description { margin-bottom: 20px; line-height: 1.6; }

        .controls {
            background: rgba(255,255,255,0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
        }
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 8px; font-weight: bold; }
        .form-group input, .form-group select {
            width: 100%;
            padding: 12px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            background: rgba(255,255,255,0.9);
        }

        .btn-start {
            background: linear-gradient(45deg, #ff6b6b, #ee5a52);
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.2rem;
            border-radius: 25px;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s ease;
            text-transform: uppercase;
            font-weight: bold;
        }
        .btn-start:hover { transform: scale(1.05); box-shadow: 0 10px 20px rgba(0,0,0,0.2); }
        .btn-start:disabled { opacity: 0.6; cursor: not-allowed; }

        .status-panel {
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
        }
        .progress-bar {
            background: rgba(255,255,255,0.2);
            border-radius: 10px;
            height: 25px;
            overflow: hidden;
            margin: 15px 0;
        }
        .progress-fill {
            background: linear-gradient(90deg, #4ecdc4, #44a08d);
            height: 100%;
            transition: width 0.5s ease;
            border-radius: 10px;
        }

        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .stat-card {
            background: rgba(255,255,255,0.1);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
        }
        .stat-number { font-size: 2rem; font-weight: bold; color: #ffd700; }
        .stat-label { margin-top: 5px; opacity: 0.9; }

        .log-container {
            background: rgba(0,0,0,0.5);
            border-radius: 10px;
            padding: 20px;
            height: 300px;
            overflow-y: auto;
            font-family: monospace;
        }
        .log-entry { margin-bottom: 10px; padding: 5px; border-left: 3px solid #4ecdc4; padding-left: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üî• –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025</h1>
            <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏—Ä—É—Å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ YouTube Shorts</p>
        </div>

        <!-- –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã -->
        <div class="modes-grid">
            <div class="mode-card active" data-mode="url">
                <div class="mode-title">
                    <span class="mode-icon">üì∫</span>
                    –ù–∞—Ä–µ–∑–∫–∞ –ø–æ URL
                </div>
                <div class="mode-description">
                    –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ ‚Üí –ø–æ–ª—É—á–∏ –≥–æ—Ç–æ–≤—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –∫–ª–∏–ø—ã –¥–ª—è Shorts
                </div>
            </div>

            <div class="mode-card" data-mode="trends">
                <div class="mode-title">
                    <span class="mode-icon">üî•</span>
                    –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
                </div>
                <div class="mode-description">
                    –ê–Ω–∞–ª–∏–∑ —Ç–æ–ø–æ–≤—ã—Ö –≤–∏–¥–µ–æ ‚Üí –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚Üí –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è
                </div>
            </div>

            <div class="mode-card" data-mode="ai">
                <div class="mode-title">
                    <span class="mode-icon">ü§ñ</span>
                    AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                </div>
                <div class="mode-description">
                    –ò–ò –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ ‚Üí –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚Üí –æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è
                </div>
            </div>
        </div>

        <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ -->
        <div class="controls">
            <div class="form-group">
                <label>YouTube URL:</label>
                <input type="url" id="youtube-url" placeholder="https://youtube.com/watch?v=..."
                       value="https://youtube.com/watch?v=dQw4w9WgXcQ">
            </div>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                <div class="form-group">
                    <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–ø–æ–≤:</label>
                    <select id="clips-count">
                        <option value="1">1 –∫–ª–∏–ø</option>
                        <option value="3" selected>3 –∫–ª–∏–ø–∞</option>
                        <option value="5">5 –∫–ª–∏–ø–æ–≤</option>
                        <option value="10">10 –∫–ª–∏–ø–æ–≤</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–µ–∫):</label>
                    <select id="duration">
                        <option value="15">15 —Å–µ–∫—É–Ω–¥</option>
                        <option value="30">30 —Å–µ–∫—É–Ω–¥</option>
                        <option value="60" selected>60 —Å–µ–∫—É–Ω–¥</option>
                        <option value="90">90 —Å–µ–∫—É–Ω–¥</option>
                    </select>
                </div>
            </div>

            <button class="btn-start" onclick="startProcessing()">
                üöÄ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É
            </button>
        </div>

        <!-- –°—Ç–∞—Ç—É—Å -->
        <div class="status-panel">
            <h3>üìä –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏</h3>
            <div class="progress-bar">
                <div class="progress-fill" id="progress-fill" style="width: 0%"></div>
            </div>
            <div id="status-message">–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</div>
        </div>

        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="stat-created">0</div>
                <div class="stat-label">–°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="stat-uploaded">0</div>
                <div class="stat-label">–ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ YouTube</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="stat-success">0%</div>
                <div class="stat-label">–£—Å–ø–µ—à–Ω–æ—Å—Ç—å</div>
            </div>
        </div>

        <!-- –õ–æ–≥ -->
        <div class="log-container" id="log-container">
            <div class="log-entry">[–°–¢–ê–†–¢] üéâ –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025 –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!</div>
        </div>
    </div>

    <script>
        let currentMode = 'url';
        let isProcessing = false;

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤
        document.querySelectorAll('.mode-card').forEach(card => {
            card.addEventListener('click', () => {
                document.querySelectorAll('.mode-card').forEach(c => c.classList.remove('active'));
                card.classList.add('active');
                currentMode = card.dataset.mode;
                addLog(`üîÑ –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: ${card.querySelector('.mode-title').textContent.trim()}`);
            });
        });

        // –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        async function startProcessing() {
            if (isProcessing) return;

            const params = {
                url: document.getElementById('youtube-url').value,
                clips: document.getElementById('clips-count').value,
                duration: document.getElementById('duration').value
            };

            try {
                const response = await fetch('/api/process', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ mode: currentMode, params: params })
                });

                const result = await response.json();

                if (result.success) {
                    addLog('üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞...');
                    startStatusUpdates();
                } else {
                    addLog('‚ùå –û—à–∏–±–∫–∞: ' + result.error);
                }
            } catch (error) {
                addLog('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error.message);
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        function startStatusUpdates() {
            const updateInterval = setInterval(async () => {
                try {
                    const response = await fetch('/api/status');
                    const data = await response.json();

                    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                    document.getElementById('progress-fill').style.width = data.processing.progress + '%';
                    document.getElementById('status-message').textContent = data.processing.message;

                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    document.getElementById('stat-created').textContent = data.stats.videos_created;
                    document.getElementById('stat-uploaded').textContent = data.stats.videos_uploaded;
                    document.getElementById('stat-success').textContent = data.stats.success_rate + '%';

                    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏
                    const logContainer = document.getElementById('log-container');
                    data.logs.forEach(log => {
                        if (!document.querySelector(`[data-time="${log.time}"]`)) {
                            const logEntry = document.createElement('div');
                            logEntry.className = 'log-entry';
                            logEntry.dataset.time = log.time;
                            logEntry.textContent = `[${log.time}] ${log.message}`;
                            logContainer.appendChild(logEntry);
                            logContainer.scrollTop = logContainer.scrollHeight;
                        }
                    });

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
                    isProcessing = data.processing.active;
                    if (!isProcessing && data.processing.progress === 100) {
                        clearInterval(updateInterval);
                        document.querySelector('.btn-start').disabled = false;
                    }
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
                }
            }, 1000);
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∞
        function addLog(message) {
            const logContainer = document.getElementById('log-container');
            const logEntry = document.createElement('div');
            logEntry.className = 'log-entry';
            const now = new Date();
            const time = now.toTimeString().slice(0, 8);
            logEntry.textContent = `[${time}] ${message}`;
            logContainer.appendChild(logEntry);
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        addLog('üí° –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É"');
    </script>
</body>
</html>
        """

    def run(self, host="127.0.0.1", port=5000, debug=False):
        """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
        self.app.run(host=host, port=port, debug=debug)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    print("\n" + "=" * 60)
    print("üåê –ó–ê–ü–£–°–ö –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–ê - –í–ò–†–£–°–ù–ê–Ø –ö–û–ù–¢–ï–ù–¢-–ú–ê–®–ò–ù–ê 2025")
    print("=" * 60)

    if not FLASK_AVAILABLE:
        print("‚ùå Flask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install flask")
        return False

    try:
        print("‚úÖ Flask –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É:")
        print("   http://127.0.0.1:5000")
        print("")
        print("üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã:")
        print("   üì∫ –ù–∞—Ä–µ–∑–∫–∞ –ø–æ URL - –≤—Å—Ç–∞–≤–ª—è–µ—à—å —Å—Å—ã–ª–∫—É ‚Üí –ø–æ–ª—É—á–∞–µ—à—å –∫–ª–∏–ø—ã")
        print("   üî• –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ - –∞–Ω–∞–ª–∏–∑ —Ç–æ–ø–∞ ‚Üí –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è")
        print("   ü§ñ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è - –ò–ò –∞–Ω–∞–ª–∏–∑ ‚Üí —Å–æ–∑–¥–∞–Ω–∏–µ ‚Üí –æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è")
        print("")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("=" * 60)

        app = ViralContentWeb()
        app.run(host="0.0.0.0", port=5000, debug=False)

        return True

    except KeyboardInterrupt:
        print("\nüëã –í–µ–±-—Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False


if __name__ == "__main__":
    success = main()
    if success:
        print("\nüëã –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
