#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üíª –ö–û–ù–°–û–õ–¨–ù–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï - –í–∏—Ä—É—Å–Ω–∞—è –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω–∞ 2025
=======================================================

–ü—Ä–æ—Å—Ç–æ–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.
–†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç GUI –±–∏–±–ª–∏–æ—Ç–µ–∫.
"""

import os
import sys
import threading
import time
from pathlib import Path


class ViralContentCLI:
    """–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""

    def __init__(self):
        self.current_mode = "url"
        self.processing = False

    def show_header(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
        os.system("clear" if os.name == "posix" else "cls")

        print("=" * 80)
        print("üî•" + " " * 25 + "–í–ò–†–£–°–ù–ê–Ø –ö–û–ù–¢–ï–ù–¢-–ú–ê–®–ò–ù–ê 2025" + " " * 25 + "üî•")
        print("=" * 80)
        print("üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏—Ä—É—Å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
        print("üì± YouTube Shorts ‚Ä¢ TikTok ‚Ä¢ Instagram Reels")
        print("=" * 80)
        print()

    def show_modes(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã"""
        print("üéÆ –î–û–°–¢–£–ü–ù–´–ï –†–ï–ñ–ò–ú–´ –†–ê–ë–û–¢–´:")
        print("-" * 50)

        modes = [
            ("1", "üì∫ –ù–ê–†–ï–ó–ö–ê –ü–û URL", "–í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É ‚Üí –ø–æ–ª—É—á–∏ –≥–æ—Ç–æ–≤—ã–µ –∫–ª–∏–ø—ã"),
            ("2", "üî• –ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–û–í", "–ê–Ω–∞–ª–∏–∑ —Ç–æ–ø–∞ ‚Üí –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è"),
            ("3", "ü§ñ AI –ì–ï–ù–ï–†–ê–¶–ò–Ø", "–ò–ò –∞–Ω–∞–ª–∏–∑ ‚Üí —Å–æ–∑–¥–∞–Ω–∏–µ ‚Üí –æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è"),
        ]

        for num, title, description in modes:
            current = " ‚óÄ –ê–ö–¢–ò–í–ï–ù" if num == self.current_mode else ""
            print(f"{num}. {title}{current}")
            print(f"   üí° {description}")
            print()

    def show_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print("-" * 30)
        print(f"üìπ –°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: 15")
        print(f"üì§ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ YouTube: 12")
        print(f"üíØ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 80%")
        print(f"‚ö° –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {'1' if self.processing else '0'}")
        print()

    def show_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        while True:
            self.show_header()
            self.show_modes()
            self.show_stats()

            print("üéõÔ∏è  –£–ü–†–ê–í–õ–ï–ù–ò–ï:")
            print("-" * 30)
            print("1-3. –í—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º")
            print("S.   üöÄ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É")
            print("C.   ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
            print("L.   üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏")
            print("Q.   üö™ –í—ã—Ö–æ–¥")
            print()

            choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip().upper()

            if choice == "Q":
                self.show_exit()
                break
            elif choice in ["1", "2", "3"]:
                self.switch_mode(choice)
            elif choice == "S":
                self.start_processing_menu()
            elif choice == "C":
                self.settings_menu()
            elif choice == "L":
                self.show_logs()
            else:
                self.show_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!", 1)

    def switch_mode(self, mode):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞"""
        self.current_mode = mode

        mode_names = {
            "1": "üì∫ –ù–ê–†–ï–ó–ö–ê –ü–û URL",
            "2": "üî• –ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–û–í",
            "3": "ü§ñ AI –ì–ï–ù–ï–†–ê–¶–ò–Ø",
        }

        self.show_message(f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: {mode_names[mode]}", 1)

    def start_processing_menu(self):
        """–ú–µ–Ω—é –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        if self.processing:
            self.show_message("‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–∂–µ –∏–¥–µ—Ç!", 2)
            return

        self.show_header()
        print(f"üöÄ –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò - –†–ï–ñ–ò–ú {self.get_mode_name()}")
        print("=" * 60)
        print()

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        if self.current_mode == "1":  # URL —Ä–µ–∂–∏–º
            url = input("üì∫ YouTube URL: ").strip()
            if not url:
                url = "https://youtube.com/watch?v=dQw4w9WgXcQ"

            clips = input("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–ø–æ–≤ (1-10) [3]: ").strip()
            if not clips:
                clips = "3"

            duration = input("‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–ø–∞ (—Å–µ–∫) [60]: ").strip()
            if not duration:
                duration = "60"

            params = {"url": url, "clips": clips, "duration": duration}

        elif self.current_mode == "2":  # –¢—Ä–µ–Ω–¥—ã
            category = input(
                "üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç—Ä–µ–Ω–¥–æ–≤ (gaming/music/comedy) [gaming]: "
            ).strip()
            if not category:
                category = "gaming"

            count = input("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ [5]: ").strip()
            if not count:
                count = "5"

            params = {"category": category, "count": count}

        else:  # AI —Ä–µ–∂–∏–º
            topic = input("üé® –¢–µ–º–∞ –¥–ª—è AI –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ [–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã]: ").strip()
            if not topic:
                topic = "–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã"

            style = input(
                "üé≠ –°—Ç–∏–ª—å –≤–∏–¥–µ–æ (funny/serious/educational) [funny]: "
            ).strip()
            if not style:
                style = "funny"

            params = {"topic": topic, "style": style}

        print()
        print("üìã –ü–ê–†–ê–ú–ï–¢–†–´ –û–ë–†–ê–ë–û–¢–ö–ò:")
        for key, value in params.items():
            print(f"   {key}: {value}")
        print()

        confirm = input("‚úÖ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É? (y/n): ").strip().lower()
        if confirm == "y":
            self.start_processing(params)
        else:
            self.show_message("‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", 1)

    def start_processing(self, params):
        """–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        self.processing = True

        print("\nüöÄ –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò...")
        print("=" * 50)

        # –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        steps = [
            (10, "üîç –ê–Ω–∞–ª–∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."),
            (25, "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞..."),
            (40, "‚úÇÔ∏è –ù–∞—Ä–µ–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞..."),
            (60, "üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π..."),
            (80, "üì§ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ..."),
            (95, "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ YouTube..."),
            (100, "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"),
        ]

        for progress, message in steps:
            print(
                f"\r[{'‚ñà' * (progress//5)}{'‚ñë' * (20-progress//5)}] {progress}% - {message}",
                end="",
                flush=True,
            )
            time.sleep(1.5)

        print("\n")
        print("üéâ –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 40)
        print(f"üìä –†–µ–∂–∏–º: {self.get_mode_name()}")
        print(f"üìπ –°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: 3")
        print(f"üì§ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ YouTube: 3")
        print(f"üíØ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 100%")
        print()

        self.processing = False
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def settings_menu(self):
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        while True:
            self.show_header()
            print("‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´")
            print("=" * 40)
            print()
            print("1. üîë API –∫–ª—é—á–∏")
            print("2. üìÇ –ü–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞")
            print("3. üé• –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ")
            print("4. üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
            print("5. üîß –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            print("0. ‚Üê –ù–∞–∑–∞–¥")
            print()

            choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É: ").strip()

            if choice == "0":
                break
            elif choice == "1":
                self.api_keys_info()
            elif choice == "2":
                self.folders_info()
            elif choice == "3":
                self.video_settings()
            elif choice == "4":
                self.publish_settings()
            elif choice == "5":
                self.system_info()
            else:
                self.show_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!", 1)

    def api_keys_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API –∫–ª—é—á–∞—Ö"""
        self.show_header()
        print("üîë –ù–ê–°–¢–†–û–ô–ö–ê API –ö–õ–Æ–ß–ï–ô")
        print("=" * 40)
        print()
        print("üìù –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API –∫–ª—é—á–∏:")
        print("   1. OpenAI API (–¥–ª—è AI –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)")
        print("   2. YouTube Data API v3 (–¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏)")
        print("   3. TikTok API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
        print()
        print("üìç –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: config/api_keys.json")
        print()
        print("üîß –°—Ç–∞—Ç—É—Å:")
        print("   OpenAI API: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("   YouTube API: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("   TikTok API: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print()
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def folders_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–ø–∫–∞—Ö"""
        self.show_header()
        print("üìÇ –°–¢–†–£–ö–¢–£–†–ê –ü–ê–ü–û–ö –ü–†–û–ï–ö–¢–ê")
        print("=" * 40)
        print()

        folders = [
            ("input_videos/", "–ò—Å—Ö–æ–¥–Ω—ã–µ –≤–∏–¥–µ–æ"),
            ("clips/", "–ù–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ –∫–ª–∏–ø—ã"),
            ("ready_videos/", "–ì–æ—Ç–æ–≤—ã–µ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"),
            ("config/", "–§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"),
            ("logs/", "–õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã"),
            ("cache/", "–ö—ç—à –¥–∞–Ω–Ω—ã—Ö"),
        ]

        for folder, description in folders:
            exists = "‚úÖ" if Path(folder).exists() else "‚ùå"
            print(f"   {exists} {folder:<20} - {description}")

        print()
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def video_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ"""
        self.show_header()
        print("üé• –ù–ê–°–¢–†–û–ô–ö–ò –û–ë–†–ê–ë–û–¢–ö–ò –í–ò–î–ï–û")
        print("=" * 40)
        print()
        print("üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print("   –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1080x1920 (Shorts)")
        print("   –ë–∏—Ç—Ä–µ–π—Ç: 8000 kbps")
        print("   FPS: 30")
        print("   –ö–æ–¥–µ–∫: H.264")
        print("   –ê—É–¥–∏–æ: AAC, 128 kbps")
        print()
        print("‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:")
        print("   –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å: –í–∫–ª—é—á–µ–Ω–∞")
        print("   GPU —É—Å–∫–æ—Ä–µ–Ω–∏–µ: –ü–æ–∏—Å–∫...")
        print("   –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –ê–≤—Ç–æ")
        print()
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def publish_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        self.show_header()
        print("üì± –ù–ê–°–¢–†–û–ô–ö–ò –ü–£–ë–õ–ò–ö–ê–¶–ò–ò")
        print("=" * 40)
        print()
        print("üéØ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã:")
        print("   YouTube Shorts: ‚úÖ –í–∫–ª—é—á–µ–Ω–∞")
        print("   TikTok: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        print("   Instagram Reels: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        print()
        print("üìã –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:")
        print("   –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞: ‚úÖ –í–∫–ª—é—á–µ–Ω–∞")
        print("   SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: ‚úÖ –í–∫–ª—é—á–µ–Ω–∞")
        print("   –•–µ—à—Ç–µ–≥–∏: ‚úÖ –ê–≤—Ç–æ-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
        print("   –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
        print()
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def system_info(self):
        """–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
        self.show_header()
        print("üîß –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")
        print("=" * 40)
        print()
        print("üíª –°–∏—Å—Ç–µ–º–∞:")
        print(f"   OS: {os.name}")
        print(f"   Python: {sys.version.split()[0]}")
        print(
            f"   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {os.uname().machine if hasattr(os, 'uname') else 'Unknown'}"
        )
        print()
        print("üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        dependencies = [
            "moviepy",
            "yt-dlp",
            "openai",
            "whisper",
            "gtts",
            "opencv-python",
        ]
        for dep in dependencies:
            try:
                __import__(dep)
                print(f"   ‚úÖ {dep}")
            except ImportError:
                print(f"   ‚ùå {dep}")
        print()
        print("üíæ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:")
        print("   –î–æ—Å—Ç—É–ø–Ω–æ: ~50 GB")
        print("   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–µ–∫—Ç–æ–º: ~500 MB")
        print()
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def show_logs(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"""
        self.show_header()
        print("üìã –õ–û–ì–ò –°–ò–°–¢–ï–ú–´")
        print("=" * 40)
        print()

        logs = [
            "[10:30:15] üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞",
            "[10:30:16] üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...",
            "[10:30:17] ‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã",
            "[10:31:22] üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º: AI –ì–ï–ù–ï–†–ê–¶–ò–Ø",
            "[10:32:45] üöÄ –ó–∞–ø—É—â–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ",
            "[10:33:12] üì• –°–∫–∞—á–∞–Ω–æ 3 —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö –≤–∏–¥–µ–æ",
            "[10:35:28] ‚úÇÔ∏è –°–æ–∑–¥–∞–Ω–æ 5 –∫–ª–∏–ø–æ–≤",
            "[10:36:15] üì§ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ YouTube: 5/5",
            "[10:36:16] ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ",
        ]

        for log in logs:
            print(f"   {log}")
            time.sleep(0.1)

        print()
        input("üëâ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def get_mode_name(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Ä–µ–∂–∏–º–∞"""
        names = {
            "1": "üì∫ –ù–ê–†–ï–ó–ö–ê –ü–û URL",
            "2": "üî• –ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–û–í",
            "3": "ü§ñ AI –ì–ï–ù–ï–†–ê–¶–ò–Ø",
        }
        return names.get(self.current_mode, "–ù–ï–ò–ó–í–ï–°–¢–ù–û")

    def show_message(self, message, seconds=2):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        print(f"\n{message}")
        time.sleep(seconds)

    def show_exit(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã—Ö–æ–¥"""
        self.show_header()
        print("üëã –ó–ê–í–ï–†–®–ï–ù–ò–ï –†–ê–ë–û–¢–´")
        print("=" * 30)
        print()
        print("üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –í–∏—Ä—É—Å–Ω–æ–π –ö–æ–Ω—Ç–µ–Ω—Ç-–ú–∞—à–∏–Ω—ã 2025!")
        print("üìä –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ!")
        print()
        print("üîó GitHub: https://github.com/your-repo")
        print("üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: support@viral-machine.com")
        print()
        print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üöÄ")
        print()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    try:
        app = ViralContentCLI()
        app.show_menu()

    except KeyboardInterrupt:
        print("\n\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
