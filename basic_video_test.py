#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üé¨ –ü–†–û–°–¢–û–ô –ì–ï–ù–ï–†–ê–¢–û–† –¢–ï–°–¢–û–í–û–ì–û –í–ò–î–ï–û
–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
"""

import asyncio
import sys
import os
from pathlib import Path
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = Path(__file__).parent
src_path = current_dir / "src"
sys.path.insert(0, str(src_path))
sys.path.insert(0, str(current_dir))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s | %(levelname)s | %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)

logger = logging.getLogger(__name__)

def create_basic_video():
    """
    –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    """
    try:
        logger.info("üé¨ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º MoviePy
        from moviepy.editor import (
            TextClip, ColorClip, CompositeVideoClip, 
            concatenate_videoclips, AudioFileClip
        )
        import moviepy.config as config
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫ ImageMagick
        os.environ['IMAGEMAGICK_BINARY'] = '/opt/homebrew/bin/convert'
        
        logger.info("‚úÖ MoviePy –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –°–æ–∑–¥–∞–µ–º —Ü–≤–µ—Ç–Ω–æ–π —Ñ–æ–Ω (–∫—Ä–∞—Å–∏–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç)
        logger.info("üé® –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω –≤–∏–¥–µ–æ...")
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ñ–æ–Ω
        background = ColorClip(
            size=(1080, 1920),  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
            color=(42, 42, 42)   # –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω
        ).set_duration(15)
        
        logger.info("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç...")
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title_text = TextClip(
            "–°–¢–û–ü! üî•\n–°–ï–ö–†–ï–¢ –ú–ò–õ–õ–ò–û–ù–ï–†–û–í\n–†–ê–°–ö–†–´–¢!",
            fontsize=90,
            color='white',
            font='Arial-Bold',
            size=(900, None),
            method='caption'
        ).set_position('center').set_duration(5)
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_text = TextClip(
            "99% –ª—é–¥–µ–π –ù–ï –ó–ù–ê–Æ–¢\n—ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞...",
            fontsize=60,
            color='yellow',
            font='Arial',
            size=(800, None),
            method='caption'
        ).set_position('center').set_duration(5).set_start(5)
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
        cta_text = TextClip(
            "–°–ú–û–¢–†–ò –î–û –ö–û–ù–¶–ê! üëá",
            fontsize=70,
            color='red',
            font='Arial-Bold'
        ).set_position('center').set_duration(5).set_start(10)
        
        logger.info("üé¨ –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –≤–∏–¥–µ–æ...")
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        final_video = CompositeVideoClip([
            background,
            title_text,
            subtitle_text, 
            cta_text
        ])
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        output_dir = Path("ready_videos")
        output_dir.mkdir(exist_ok=True)
        
        output_path = output_dir / f"test_viral_video_{int(asyncio.get_event_loop().time())}.mp4"
        
        logger.info(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ: {output_path}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        final_video.write_videofile(
            str(output_path),
            fps=30,
            codec='libx264',
            audio=False,  # –ü–æ–∫–∞ –±–µ–∑ –∞—É–¥–∏–æ
            verbose=False,
            logger=None
        )
        
        logger.info("üéâ –í–ò–î–ï–û –°–û–ó–î–ê–ù–û –£–°–ü–ï–®–ù–û!")
        logger.info(f"üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_path}")
        logger.info(f"üìè –†–∞–∑–º–µ—Ä: {output_path.stat().st_size / 1024 / 1024:.1f} MB")
        
        return str(output_path)
        
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

async def create_enhanced_video():
    """
    –°–æ–∑–¥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
    """
    try:
        logger.info("‚ú® –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏...")
        
        from moviepy.editor import (
            TextClip, ColorClip, CompositeVideoClip,
            concatenate_videoclips, vfx
        )
        
        # –ë–∞–∑–æ–≤—ã–π —Ñ–æ–Ω —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º
        background = ColorClip(
            size=(1080, 1920),
            color=(20, 20, 60)  # –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π
        ).set_duration(20)
        
        # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title = TextClip(
            "üî• –°–ï–ö–†–ï–¢ –ú–ò–õ–õ–ò–û–ù–ï–†–û–í üî•",
            fontsize=100,
            color='white',
            font='Arial-Bold'
        ).set_position('center').set_duration(6)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è
        title = title.crossfadein(1).crossfadeout(1)
        
        # –í—Ç–æ—Ä–æ–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞
        facts_text = TextClip(
            "7 –£–¢–†–ï–ù–ù–ò–• –ü–†–ò–í–´–ß–ï–ö\n–ö–û–¢–û–†–´–ï –ò–ó–ú–ï–ù–Ø–¢\n–í–ê–®–£ –ñ–ò–ó–ù–¨ –ó–ê 30 –î–ù–ï–ô!",
            fontsize=70,
            color='yellow',
            font='Arial-Bold',
            size=(900, None),
            method='caption'
        ).set_position('center').set_duration(7).set_start(6)
        
        # CTA –±–ª–æ–∫
        cta = TextClip(
            "–ü–û–î–ü–ò–®–ò–°–¨\n–ß–¢–û–ë–´ –ù–ï –ü–†–û–ü–£–°–¢–ò–¢–¨! üëÜ",
            fontsize=80,
            color='red',
            font='Arial-Bold',
            size=(800, None),
            method='caption'
        ).set_position('center').set_duration(7).set_start(13)
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤–∏–¥–µ–æ
        final_video = CompositeVideoClip([
            background,
            title,
            facts_text,
            cta
        ])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç
        final_video = final_video.fx(vfx.fadeout, 1)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        output_path = Path("ready_videos") / f"enhanced_viral_{int(asyncio.get_event_loop().time())}.mp4"
        
        final_video.write_videofile(
            str(output_path),
            fps=30,
            codec='libx264',
            bitrate="5000k",
            audio=False,
            verbose=False,
            logger=None
        )
        
        logger.info("üöÄ –£–õ–£–ß–®–ï–ù–ù–û–ï –í–ò–î–ï–û –ì–û–¢–û–í–û!")
        logger.info(f"üìÅ –ü—É—Ç—å: {output_path}")
        
        return str(output_path)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ: {str(e)}")
        return None

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    """
    print("üé¨" + "="*60)
    print("        –ì–ï–ù–ï–†–ê–¢–û–† –¢–ï–°–¢–û–í–û–ì–û –í–ò–î–ï–û") 
    print("="*64)
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∏–¥–µ–æ:\n1. –ü—Ä–æ—Å—Ç–æ–µ –±–∞–∑–æ–≤–æ–µ –≤–∏–¥–µ–æ\n2. –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏\n\n–í–≤–æ–¥ (1-2): ").strip()
    
    if choice == "2":
        logger.info("‚ú® –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ...")
        result = asyncio.run(create_enhanced_video())
    else:
        logger.info("üé¨ –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤–æ–µ –≤–∏–¥–µ–æ...")
        result = create_basic_video()
    
    if result:
        print(f"\nüéâ –£–°–ü–ï–•! –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {result}")
        print("üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç!")
        
        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É
        open_folder = input("\nüóÇÔ∏è –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É —Å –≤–∏–¥–µ–æ? (y/n): ").strip().lower()
        if open_folder == 'y':
            import subprocess
            subprocess.run(["open", "ready_videos"])
    else:
        print("\n‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∏–¥–µ–æ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")

if __name__ == "__main__":
    main()